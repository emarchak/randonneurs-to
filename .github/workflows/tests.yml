name: tests

on: [push]

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"

      - name: Install dependencies
        run: yarn install --production=false

      - name: Run the tests
        run: yarn test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        if: ${{ github.actor != 'dependabot[bot]' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  snapshot:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"

      - name: Install dependencies
        run: yarn install --production=false

      - name: Build screenshots
        run: yarn build
        env:
          CCN_ENDPOINT: ${{ secrets.CCN_ENDPOINT }}
          GRAPHQL_URL: ${{ secrets.GRAPHQL_URL }}
          IS_SNAPSHOT: true

      - name: Upload snapshots to Percy
        run: yarn test:snapshot
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
